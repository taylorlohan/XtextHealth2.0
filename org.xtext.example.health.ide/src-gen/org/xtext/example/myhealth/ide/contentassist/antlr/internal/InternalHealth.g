/*
 * generated by Xtext 2.24.0
 */
grammar InternalHealth;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.myhealth.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.myhealth.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.myhealth.services.HealthGrammarAccess;

}
@parser::members {
	private HealthGrammarAccess grammarAccess;

	public void setGrammarAccess(HealthGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleHealthProgram
entryRuleHealthProgram
:
{ before(grammarAccess.getHealthProgramRule()); }
	 ruleHealthProgram
{ after(grammarAccess.getHealthProgramRule()); } 
	 EOF 
;

// Rule HealthProgram
ruleHealthProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHealthProgramAccess().getStatementsAssignment()); }
		(rule__HealthProgram__StatementsAssignment)*
		{ after(grammarAccess.getHealthProgramAccess().getStatementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePeopleStatement
entryRulePeopleStatement
:
{ before(grammarAccess.getPeopleStatementRule()); }
	 rulePeopleStatement
{ after(grammarAccess.getPeopleStatementRule()); } 
	 EOF 
;

// Rule PeopleStatement
rulePeopleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPeopleStatementAccess().getGroup()); }
		(rule__PeopleStatement__Group__0)
		{ after(grammarAccess.getPeopleStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeightStatement
entryRuleHeightStatement
:
{ before(grammarAccess.getHeightStatementRule()); }
	 ruleHeightStatement
{ after(grammarAccess.getHeightStatementRule()); } 
	 EOF 
;

// Rule HeightStatement
ruleHeightStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeightStatementAccess().getGroup()); }
		(rule__HeightStatement__Group__0)
		{ after(grammarAccess.getHeightStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWeightStatement
entryRuleWeightStatement
:
{ before(grammarAccess.getWeightStatementRule()); }
	 ruleWeightStatement
{ after(grammarAccess.getWeightStatementRule()); } 
	 EOF 
;

// Rule WeightStatement
ruleWeightStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWeightStatementAccess().getGroup()); }
		(rule__WeightStatement__Group__0)
		{ after(grammarAccess.getWeightStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAgeStatement
entryRuleAgeStatement
:
{ before(grammarAccess.getAgeStatementRule()); }
	 ruleAgeStatement
{ after(grammarAccess.getAgeStatementRule()); } 
	 EOF 
;

// Rule AgeStatement
ruleAgeStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAgeStatementAccess().getGroup()); }
		(rule__AgeStatement__Group__0)
		{ after(grammarAccess.getAgeStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGenderStatement
entryRuleGenderStatement
:
{ before(grammarAccess.getGenderStatementRule()); }
	 ruleGenderStatement
{ after(grammarAccess.getGenderStatementRule()); } 
	 EOF 
;

// Rule GenderStatement
ruleGenderStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGenderStatementAccess().getGroup()); }
		(rule__GenderStatement__Group__0)
		{ after(grammarAccess.getGenderStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIngestStatement
entryRuleIngestStatement
:
{ before(grammarAccess.getIngestStatementRule()); }
	 ruleIngestStatement
{ after(grammarAccess.getIngestStatementRule()); } 
	 EOF 
;

// Rule IngestStatement
ruleIngestStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIngestStatementAccess().getGroup()); }
		(rule__IngestStatement__Group__0)
		{ after(grammarAccess.getIngestStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExerciseStatement
entryRuleExerciseStatement
:
{ before(grammarAccess.getExerciseStatementRule()); }
	 ruleExerciseStatement
{ after(grammarAccess.getExerciseStatementRule()); } 
	 EOF 
;

// Rule ExerciseStatement
ruleExerciseStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExerciseStatementAccess().getGroup()); }
		(rule__ExerciseStatement__Group__0)
		{ after(grammarAccess.getExerciseStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdviceStatement
entryRuleAdviceStatement
:
{ before(grammarAccess.getAdviceStatementRule()); }
	 ruleAdviceStatement
{ after(grammarAccess.getAdviceStatementRule()); } 
	 EOF 
;

// Rule AdviceStatement
ruleAdviceStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdviceStatementAccess().getGroup()); }
		(rule__AdviceStatement__Group__0)
		{ after(grammarAccess.getAdviceStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputValue
entryRuleInputValue
:
{ before(grammarAccess.getInputValueRule()); }
	 ruleInputValue
{ after(grammarAccess.getInputValueRule()); } 
	 EOF 
;

// Rule InputValue
ruleInputValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputValueAccess().getAlternatives()); }
		(rule__InputValue__Alternatives)
		{ after(grammarAccess.getInputValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntValue
entryRuleIntValue
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntValueAccess().getValAssignment()); }
		(rule__IntValue__ValAssignment)
		{ after(grammarAccess.getIntValueAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealValue
entryRuleRealValue
:
{ before(grammarAccess.getRealValueRule()); }
	 ruleRealValue
{ after(grammarAccess.getRealValueRule()); } 
	 EOF 
;

// Rule RealValue
ruleRealValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealValueAccess().getValAssignment()); }
		(rule__RealValue__ValAssignment)
		{ after(grammarAccess.getRealValueAccess().getValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleREAL
entryRuleREAL
@init { 
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getREALRule()); }
	 ruleREAL
{ after(grammarAccess.getREALRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule REAL
ruleREAL 
	@init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getREALAccess().getGroup()); }
		(rule__REAL__Group__0)
		{ after(grammarAccess.getREALAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}

// Rule Gender
ruleGender
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenderAccess().getAlternatives()); }
		(rule__Gender__Alternatives)
		{ after(grammarAccess.getGenderAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule nutrition
rulenutrition
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNutritionAccess().getAlternatives()); }
		(rule__Nutrition__Alternatives)
		{ after(grammarAccess.getNutritionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AdviceType
ruleAdviceType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdviceTypeAccess().getAlternatives()); }
		(rule__AdviceType__Alternatives)
		{ after(grammarAccess.getAdviceTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ExerciseType
ruleExerciseType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExerciseTypeAccess().getAlternatives()); }
		(rule__ExerciseType__Alternatives)
		{ after(grammarAccess.getExerciseTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getPeopleStatementParserRuleCall_0()); }
		rulePeopleStatement
		{ after(grammarAccess.getStatementAccess().getPeopleStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getHeightStatementParserRuleCall_1()); }
		ruleHeightStatement
		{ after(grammarAccess.getStatementAccess().getHeightStatementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getWeightStatementParserRuleCall_2()); }
		ruleWeightStatement
		{ after(grammarAccess.getStatementAccess().getWeightStatementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getAgeStatementParserRuleCall_3()); }
		ruleAgeStatement
		{ after(grammarAccess.getStatementAccess().getAgeStatementParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGenderStatementParserRuleCall_4()); }
		ruleGenderStatement
		{ after(grammarAccess.getStatementAccess().getGenderStatementParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIngestStatementParserRuleCall_5()); }
		ruleIngestStatement
		{ after(grammarAccess.getStatementAccess().getIngestStatementParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getExerciseStatementParserRuleCall_6()); }
		ruleExerciseStatement
		{ after(grammarAccess.getStatementAccess().getExerciseStatementParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getAdviceStatementParserRuleCall_7()); }
		ruleAdviceStatement
		{ after(grammarAccess.getStatementAccess().getAdviceStatementParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputValueAccess().getIntValueParserRuleCall_0()); }
		ruleIntValue
		{ after(grammarAccess.getInputValueAccess().getIntValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInputValueAccess().getRealValueParserRuleCall_1()); }
		ruleRealValue
		{ after(grammarAccess.getInputValueAccess().getRealValueParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gender__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenderAccess().getMaleEnumLiteralDeclaration_0()); }
		('Male')
		{ after(grammarAccess.getGenderAccess().getMaleEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getGenderAccess().getFemaleEnumLiteralDeclaration_1()); }
		('Female')
		{ after(grammarAccess.getGenderAccess().getFemaleEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Nutrition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNutritionAccess().getProteinEnumLiteralDeclaration_0()); }
		('protein')
		{ after(grammarAccess.getNutritionAccess().getProteinEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNutritionAccess().getFatEnumLiteralDeclaration_1()); }
		('fat')
		{ after(grammarAccess.getNutritionAccess().getFatEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getNutritionAccess().getCarbohydrateEnumLiteralDeclaration_2()); }
		('carbohydrate')
		{ after(grammarAccess.getNutritionAccess().getCarbohydrateEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdviceTypeAccess().getEatingEnumLiteralDeclaration_0()); }
		('Eating')
		{ after(grammarAccess.getAdviceTypeAccess().getEatingEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdviceTypeAccess().getSportEnumLiteralDeclaration_1()); }
		('Sport')
		{ after(grammarAccess.getAdviceTypeAccess().getSportEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExerciseType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExerciseTypeAccess().getWalkEnumLiteralDeclaration_0()); }
		('walk')
		{ after(grammarAccess.getExerciseTypeAccess().getWalkEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getExerciseTypeAccess().getRunEnumLiteralDeclaration_1()); }
		('run')
		{ after(grammarAccess.getExerciseTypeAccess().getRunEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getExerciseTypeAccess().getSwimEnumLiteralDeclaration_2()); }
		('swim')
		{ after(grammarAccess.getExerciseTypeAccess().getSwimEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeopleStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeopleStatement__Group__0__Impl
	rule__PeopleStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PeopleStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeopleStatementAccess().getMyKeyword_0()); }
	'my'
	{ after(grammarAccess.getPeopleStatementAccess().getMyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeopleStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeopleStatement__Group__1__Impl
	rule__PeopleStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PeopleStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeopleStatementAccess().getNameKeyword_1()); }
	'name'
	{ after(grammarAccess.getPeopleStatementAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeopleStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeopleStatement__Group__2__Impl
	rule__PeopleStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PeopleStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeopleStatementAccess().getIsKeyword_2()); }
	'is'
	{ after(grammarAccess.getPeopleStatementAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeopleStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PeopleStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PeopleStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPeopleStatementAccess().getNameAssignment_3()); }
	(rule__PeopleStatement__NameAssignment_3)
	{ after(grammarAccess.getPeopleStatementAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HeightStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HeightStatement__Group__0__Impl
	rule__HeightStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HeightStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeightStatementAccess().getAddKeyword_0()); }
	'add'
	{ after(grammarAccess.getHeightStatementAccess().getAddKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeightStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HeightStatement__Group__1__Impl
	rule__HeightStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HeightStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeightStatementAccess().getHeightKeyword_1()); }
	'height'
	{ after(grammarAccess.getHeightStatementAccess().getHeightKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeightStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HeightStatement__Group__2__Impl
	rule__HeightStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HeightStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeightStatementAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getHeightStatementAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeightStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HeightStatement__Group__3__Impl
	rule__HeightStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HeightStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeightStatementAccess().getHeightAssignment_3()); }
	(rule__HeightStatement__HeightAssignment_3)
	{ after(grammarAccess.getHeightStatementAccess().getHeightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeightStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HeightStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HeightStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeightStatementAccess().getCentimetersKeyword_4()); }
	'centimeters'
	{ after(grammarAccess.getHeightStatementAccess().getCentimetersKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WeightStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WeightStatement__Group__0__Impl
	rule__WeightStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WeightStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWeightStatementAccess().getAddKeyword_0()); }
	'add'
	{ after(grammarAccess.getWeightStatementAccess().getAddKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WeightStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WeightStatement__Group__1__Impl
	rule__WeightStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WeightStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWeightStatementAccess().getWeightKeyword_1()); }
	'weight'
	{ after(grammarAccess.getWeightStatementAccess().getWeightKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WeightStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WeightStatement__Group__2__Impl
	rule__WeightStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WeightStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWeightStatementAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getWeightStatementAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WeightStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WeightStatement__Group__3__Impl
	rule__WeightStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WeightStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWeightStatementAccess().getWeightAssignment_3()); }
	(rule__WeightStatement__WeightAssignment_3)
	{ after(grammarAccess.getWeightStatementAccess().getWeightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WeightStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WeightStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WeightStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWeightStatementAccess().getKilogramsKeyword_4()); }
	'kilograms'
	{ after(grammarAccess.getWeightStatementAccess().getKilogramsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AgeStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgeStatement__Group__0__Impl
	rule__AgeStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AgeStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgeStatementAccess().getAddKeyword_0()); }
	'add'
	{ after(grammarAccess.getAgeStatementAccess().getAddKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgeStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgeStatement__Group__1__Impl
	rule__AgeStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AgeStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgeStatementAccess().getAgeKeyword_1()); }
	'age'
	{ after(grammarAccess.getAgeStatementAccess().getAgeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgeStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgeStatement__Group__2__Impl
	rule__AgeStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AgeStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgeStatementAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getAgeStatementAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgeStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgeStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AgeStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgeStatementAccess().getAgeAssignment_3()); }
	(rule__AgeStatement__AgeAssignment_3)
	{ after(grammarAccess.getAgeStatementAccess().getAgeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenderStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenderStatement__Group__0__Impl
	rule__GenderStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenderStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenderStatementAccess().getMyKeyword_0()); }
	'my'
	{ after(grammarAccess.getGenderStatementAccess().getMyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenderStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenderStatement__Group__1__Impl
	rule__GenderStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GenderStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenderStatementAccess().getGenderKeyword_1()); }
	'gender'
	{ after(grammarAccess.getGenderStatementAccess().getGenderKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenderStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenderStatement__Group__2__Impl
	rule__GenderStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GenderStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenderStatementAccess().getIsKeyword_2()); }
	'is'
	{ after(grammarAccess.getGenderStatementAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenderStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenderStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenderStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenderStatementAccess().getGenderAssignment_3()); }
	(rule__GenderStatement__GenderAssignment_3)
	{ after(grammarAccess.getGenderStatementAccess().getGenderAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IngestStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IngestStatement__Group__0__Impl
	rule__IngestStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IngestStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngestStatementAccess().getIKeyword_0()); }
	'I'
	{ after(grammarAccess.getIngestStatementAccess().getIKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IngestStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IngestStatement__Group__1__Impl
	rule__IngestStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IngestStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngestStatementAccess().getHaveKeyword_1()); }
	'have'
	{ after(grammarAccess.getIngestStatementAccess().getHaveKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IngestStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IngestStatement__Group__2__Impl
	rule__IngestStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IngestStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngestStatementAccess().getNutritiontypeAssignment_2()); }
	(rule__IngestStatement__NutritiontypeAssignment_2)
	{ after(grammarAccess.getIngestStatementAccess().getNutritiontypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IngestStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IngestStatement__Group__3__Impl
	rule__IngestStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IngestStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngestStatementAccess().getAmountAssignment_3()); }
	(rule__IngestStatement__AmountAssignment_3)
	{ after(grammarAccess.getIngestStatementAccess().getAmountAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IngestStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IngestStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IngestStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIngestStatementAccess().getGKeyword_4()); }
	'g'
	{ after(grammarAccess.getIngestStatementAccess().getGKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExerciseStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExerciseStatement__Group__0__Impl
	rule__ExerciseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExerciseStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExerciseStatementAccess().getIKeyword_0()); }
	'I'
	{ after(grammarAccess.getExerciseStatementAccess().getIKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExerciseStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExerciseStatement__Group__1__Impl
	rule__ExerciseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExerciseStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExerciseStatementAccess().getExerciseTypeAssignment_1()); }
	(rule__ExerciseStatement__ExerciseTypeAssignment_1)
	{ after(grammarAccess.getExerciseStatementAccess().getExerciseTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExerciseStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExerciseStatement__Group__2__Impl
	rule__ExerciseStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExerciseStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExerciseStatementAccess().getForKeyword_2()); }
	'for'
	{ after(grammarAccess.getExerciseStatementAccess().getForKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExerciseStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExerciseStatement__Group__3__Impl
	rule__ExerciseStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExerciseStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExerciseStatementAccess().getTimeAssignment_3()); }
	(rule__ExerciseStatement__TimeAssignment_3)
	{ after(grammarAccess.getExerciseStatementAccess().getTimeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExerciseStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExerciseStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExerciseStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExerciseStatementAccess().getHourKeyword_4()); }
	'hour'
	{ after(grammarAccess.getExerciseStatementAccess().getHourKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdviceStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdviceStatement__Group__0__Impl
	rule__AdviceStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdviceStatementAccess().getGiveKeyword_0()); }
	'give'
	{ after(grammarAccess.getAdviceStatementAccess().getGiveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdviceStatement__Group__1__Impl
	rule__AdviceStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdviceStatementAccess().getMeKeyword_1()); }
	'me'
	{ after(grammarAccess.getAdviceStatementAccess().getMeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdviceStatement__Group__2__Impl
	rule__AdviceStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdviceStatementAccess().getAdviceKeyword_2()); }
	'advice'
	{ after(grammarAccess.getAdviceStatementAccess().getAdviceKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdviceStatement__Group__3__Impl
	rule__AdviceStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdviceStatementAccess().getOnKeyword_3()); }
	'on'
	{ after(grammarAccess.getAdviceStatementAccess().getOnKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdviceStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdviceStatementAccess().getAdAssignment_4()); }
	(rule__AdviceStatement__AdAssignment_4)
	{ after(grammarAccess.getAdviceStatementAccess().getAdAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__REAL__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REAL__Group__0__Impl
	rule__REAL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREALAccess().getINTTerminalRuleCall_0()); }
	(RULE_INT)?
	{ after(grammarAccess.getREALAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REAL__Group__1__Impl
	rule__REAL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREALAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getREALAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__REAL__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getREALAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getREALAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HealthProgram__StatementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHealthProgramAccess().getStatementsStatementParserRuleCall_0()); }
		ruleStatement
		{ after(grammarAccess.getHealthProgramAccess().getStatementsStatementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PeopleStatement__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPeopleStatementAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getPeopleStatementAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HeightStatement__HeightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeightStatementAccess().getHeightInputValueParserRuleCall_3_0()); }
		ruleInputValue
		{ after(grammarAccess.getHeightStatementAccess().getHeightInputValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WeightStatement__WeightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWeightStatementAccess().getWeightInputValueParserRuleCall_3_0()); }
		ruleInputValue
		{ after(grammarAccess.getWeightStatementAccess().getWeightInputValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgeStatement__AgeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgeStatementAccess().getAgeInputValueParserRuleCall_3_0()); }
		ruleInputValue
		{ after(grammarAccess.getAgeStatementAccess().getAgeInputValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenderStatement__GenderAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenderStatementAccess().getGenderGenderEnumRuleCall_3_0()); }
		ruleGender
		{ after(grammarAccess.getGenderStatementAccess().getGenderGenderEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IngestStatement__NutritiontypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIngestStatementAccess().getNutritiontypeNutritionEnumRuleCall_2_0()); }
		rulenutrition
		{ after(grammarAccess.getIngestStatementAccess().getNutritiontypeNutritionEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IngestStatement__AmountAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIngestStatementAccess().getAmountInputValueParserRuleCall_3_0()); }
		ruleInputValue
		{ after(grammarAccess.getIngestStatementAccess().getAmountInputValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExerciseStatement__ExerciseTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExerciseStatementAccess().getExerciseTypeExerciseTypeEnumRuleCall_1_0()); }
		ruleExerciseType
		{ after(grammarAccess.getExerciseStatementAccess().getExerciseTypeExerciseTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExerciseStatement__TimeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExerciseStatementAccess().getTimeInputValueParserRuleCall_3_0()); }
		ruleInputValue
		{ after(grammarAccess.getExerciseStatementAccess().getTimeInputValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdviceStatement__AdAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdviceStatementAccess().getAdAdviceTypeEnumRuleCall_4_0()); }
		ruleAdviceType
		{ after(grammarAccess.getAdviceStatementAccess().getAdAdviceTypeEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntValueAccess().getValINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getIntValueAccess().getValINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealValue__ValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealValueAccess().getValREALParserRuleCall_0()); }
		ruleREAL
		{ after(grammarAccess.getRealValueAccess().getValREALParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
